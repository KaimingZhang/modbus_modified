mc_new_tcp_pi(3)
====================


NAME
----
mc_new_tcp_pi - create a libmc context for TCP Protocol Independent


SYNOPSIS
--------
*mc_t *mc_new_tcp_pi(const char *'node', const char *'service');*


DESCRIPTION
-----------
The _mc_new_tcp_pi()_ function shall allocate and initialize a mc_t
structure to communicate with a Mc TCP IPv4 or Ipv6 server.

The _node_ argument specifies the host name or IP address of the host to connect
to, eg. '192.168.0.5' , '::1' or 'server.com'.

The _service_ argument is the service name/port number to connect to. To use the
default Mc port use the string "502". On many Unix systems, it’s
convenient to use a port number greater than or equal to 1024 because it’s not
necessary to have administrator privileges.


RETURN VALUE
------------
The _mc_new_tcp_pi()_ function shall return a pointer to a *mc_t* structure
if successful. Otherwise it shall return NULL and set errno to one of the values
defined below.


ERRORS
------
*EINVAL*::
The node string is empty or has been truncated. The service string is empty or
has been truncated.


EXAMPLE
-------
[source,c]
-------------------
mc_t *ctx;

ctx = mc_new_tcp_pi("::1", "1502");
if (ctx == NULL) {
    fprintf(stderr, "Unable to allocate libmc context\n");
    return -1;
}

if (mc_connect(ctx) == -1) {
    fprintf(stderr, "Connection failed: %s\n", mc_strerror(errno));
    mc_free(ctx);
    return -1;
}
-------------------

SEE ALSO
--------
linkmb:mc_new_tcp[3]
linkmb:mc_new_rtu[3]
linkmb:mc_free[3]


AUTHORS
-------
The libmc documentation was written by Stéphane Raimbault
<stephane.raimbault@gmail.com>
